<idea-plugin version="2">
  <id>com.mnw.stickyselection</id>
  <name>Sticky Selection</name>
  <version>2.4</version>
  <vendor email="mikinw.development@gmail.com" url="https://github.com/mikinw/StickySelection">MikiNW</vendor>

  <description><![CDATA[
      You can mark a selection to be permanently highlighted, even when your caret moves away.
      Inspired by "Style token" of Notepad++.

      <br>You can define an arbitrary number of Paint Groups. Selecting the appropriate editor action
      (keystroke or context menu), the all occurrences of currently selected text will be added to
      the Paint Group and will be permanently highlighted (until you clear the selection with an
      other editor action). So you can have different text fragments to be selected with the same
      Paint Group. The Paint Groups are kept when IntelliJ is closed.

      <ul>
      <li>You can set different colours for each Paint Group
      <li>You can set a marker to be visible on the right side of the editor
      <li>You can add multiple selections to the same group
      <li>You can convert a Paint Group to multi caret selection (and thus edit, copy, delete, etc. it)
      <li>For convenience you can undo the last addition (until the document is edited)
      <li>You can cycle through each element in a given Paint Group or in all Paint Groups
      <li>Keymap actions are added dynamically for paint, clear and convert as you add more Paint Group
      </ul>

      <br>Undo works up until the document is changed, or the editor is closed.
      Navigating in a specific Paint Group works like this:
      <ul>
      <li>If the caret is inside a Paint Group upcoming navigation will move caret among the Paints in that Paint Group.
      <li>If the caret is not inside a Paint Group the plugin will find the closest selection (in the direction the
      navigation happens), and will select that Paint Group for upcoming navigation
      <li>In the setting you can select if you wish the navigation to continue from the beginning of the document
      when you have reached the end of the document (or from the end if you have reached the beginning, when navigating
      to the other direction)
      <li>If caret is moved, decision starts from the beginning.
      </ul>

      <br>Default shortcuts (but I highly encourage to define your own or at least check with your current
      shortcuts)>
      <ul>
      <li>Press <em>Ctrl + Alt + F9</em> to paint a selection (showing popup for selecting Paint Group). If
      nothing is selected, then the plugin tries to select automatically the word or block under the caret.
      <li>Press <em>Ctrl + Alt + F10</em> than <em>F9</em> to clear a selection (showing popup for selecting Paint Group).
      <li>Press <em>Ctrl + Alt + F10</em> than <em>F10</em> to clear all selections.
      <li>Press <em>Ctrl + Alt + F8</em> to undo last selection.
      <li>Press <em>Ctrl + Alt + quote</em> to navigate to next Paint in the current Paint Group.
      <li>Press <em>Ctrl + Alt + semicolon</em> to navigate to previous Paint in the current Paint Group.
      </ul>
      <br>Note: control + alt on Mac is (I guess) meta + alt

      <p>If you find this plugin useful, please consider inviting me for a beer.
        I develop this plugin in my free time and I'm more motivated when I have a beer on desk :-)

        <br> http://PayPal.Me/mnwDevelopment/
      ]]></description>


    <!-- done rewrite xth selection to a given text => turn selection to multi caret (popup) -->
    <!-- done undo selection -->
    <!-- Postponed indefinitely: redo selection -->
    <!-- done next/previous selection -->
    <!-- done action to iterate through all selections regardless of groups -->
    <!-- done paint group unaware iteration could start from beginning if end of doc depending on settings -->
    <!-- done settings page to set: number of highlights, colour, framed highlight -->
    <!-- done show colour in popup -->

    <!-- done prev/next refactor, -->
    <!-- done settings -> editor, -->
    <!-- done add actions dynamically -->
    <!-- TODO performance improvement could be to replace arrayList of RangeHighlighters to SortedTree of RangeHighlighters -->
    <!-- done disable undo if it's not available -->
    <!-- done select paint group if only one exists -->
    <!-- done multi caret selection does not search for text matches, only converts selections to paint -->

    <!-- done color icons in settings -->
    <!-- done bug: navigate down won't actually find the closest paint, -->
    <!-- done bug: error when trying to convert without any sticky selection -->
    <!-- done bug: the beans are removed, created in valueRepository as the settings screen adds and removes lines -->
    <!-- done bug: does not persist highlights on exit -->
    <!-- done bug: can double store highlights -->


  <change-notes><![CDATA[
      v1.0 this is the first release<br>
      v1.2 <br>
      v2.0 redesign and lots of new features (navigation, convert, arbitrary number of groups, visual hints, undo)<br>
      v2.1 persisting selections when IDE gets closed<br>
      v2.2 fixed: exception during first start, fixed: incorrectly restored Paint after reopening the IDE (when the document has changed) <br>
      v2.3 fixed: caret can jump to deleted highlight, fixed: preferences page does not respond to Paint Group changes, fixed: exception after "paint, convert, paint, undo" <br>
      v2.4 fixed: exception when changing color, fixed: lingering highlights when changing color <br>
      ]]>
  </change-notes>

  <!-- please see http://confluence.jetbrains.net/display/IDEADEV/Build+Number+Ranges for description -->
  <idea-version since-build="135"/>

  <!-- please see http://confluence.jetbrains.net/display/IDEADEV/Plugin+Compatibility+with+IntelliJ+Platform+Products
       on how to target different products -->
  <depends>com.intellij.modules.lang</depends>

  <application-components>
    <!-- Add your application components here -->
      <component>
          <implementation-class>com.mnw.stickyselection.StickySelectionAppComponent</implementation-class>
      </component>
  </application-components>

  <project-components>
    <!-- Add your project components here -->
  </project-components>

  <actions>
    <!-- Add your actions here -->

      <action id="com.mnw.stickyselection.actions.ClearAllPaintGroupAction" class="com.mnw.stickyselection.actions.ClearAllPaintGroupAction"
              text="Clear All Groups" description="Clear All Selection Groups">
          <keyboard-shortcut keymap="$default" first-keystroke="control alt F10" second-keystroke="F10"/>
      </action>

      <action id="com.mnw.stickyselection.actions.ConvertPaintGroupToSelection" class="com.mnw.stickyselection.actions.ConvertPaintGroupToSelection"
              text="Convert to selection" description="Convert to multi-caret selection">
      </action>

      <action id="com.mnw.stickyselection.actions.UndoLastPaintAction" class="com.mnw.stickyselection.actions.UndoLastPaintAction"
              text="Undo last selection" description="Deselect last added selection">
          <keyboard-shortcut keymap="$default" first-keystroke="control alt F8"/>
      </action>


      <action id="com.mnw.stickyselection.actions.NavigateToNextPaintInGroup" class="com.mnw.stickyselection.actions.NavigateToNextPaintInGroup"
              text="Next" description="Navigate to next Paint in current Paint Group">
          <keyboard-shortcut keymap="$default" first-keystroke="control alt QUOTE"/>

      </action>

      <action id="com.mnw.stickyselection.actions.NavigateToPreviousPaintInGroup" class="com.mnw.stickyselection.actions.NavigateToPreviousPaintInGroup"
              text="Previous" description="Navigate to previous Paint in current Paint Group">
          <keyboard-shortcut keymap="$default" first-keystroke="control alt SEMICOLON"/>

      </action>

      <action id="com.mnw.stickyselection.actions.PaintSelectionPopupAction" class="com.mnw.stickyselection.actions.PaintSelectionPopupAction"
              text="Paint" description="Sticky Paint current selection">
          <keyboard-shortcut keymap="$default" first-keystroke="control alt F9"/>
      </action>

      <action id="com.mnw.stickyselection.actions.ClearPaintGroupPopupAction" class="com.mnw.stickyselection.actions.ClearPaintGroupPopupAction"
              text="Clear" description="Clear specific Paint Group">
          <keyboard-shortcut keymap="$default" first-keystroke="control alt F10"  second-keystroke="F9"/>
      </action>

      <action id="com.mnw.stickyselection.actions.NavigateToAnyNextPaint" class="com.mnw.stickyselection.actions.NavigateToAnyNextPaint"
              text="Previous in any Group" description="Navigate to closest Paint upwards agnostic of Paint Groups">
      </action>

      <action id="com.mnw.stickyselection.actions.NavigateToAnyPreviousPaint" class="com.mnw.stickyselection.actions.NavigateToAnyPreviousPaint"
              text="Next in any Group" description="Navigate to closest Paint downwards agnostic of Paint Groups">
      </action>

      <group>
          <separator/>
          <group id="StickyHighlight.Menu" text="StickyHighlight" popup="true">
              <reference id="com.mnw.stickyselection.actions.PaintSelectionPopupAction" />
              <reference id="com.mnw.stickyselection.actions.ClearPaintGroupPopupAction" />
              <reference id="com.mnw.stickyselection.actions.ConvertPaintGroupToSelection" />
              <reference id="com.mnw.stickyselection.actions.UndoLastPaintAction" />
              <reference id="com.mnw.stickyselection.actions.NavigateToPreviousPaintInGroup" />
              <reference id="com.mnw.stickyselection.actions.NavigateToNextPaintInGroup" />
              <reference id="com.mnw.stickyselection.actions.NavigateToAnyPreviousPaint" />
              <reference id="com.mnw.stickyselection.actions.NavigateToAnyNextPaint" />
              <reference id="com.mnw.stickyselection.actions.ClearAllPaintGroupAction" />
          </group>
          <add-to-group group-id="EditorPopupMenu" anchor="last"/>
      </group>
  </actions>

  <extensions defaultExtensionNs="com.intellij">
      <applicationConfigurable instance="com.mnw.stickyselection.preferences.StickySelectionPreferences"/>
      <projectService serviceImplementation="com.mnw.stickyselection.model.StoredHighlightsRepository"/>
      <applicationService serviceInterface="com.mnw.stickyselection.model.ValuesRepository" serviceImplementation="com.mnw.stickyselection.model.ValuesRepositoryImpl" />
  </extensions>
</idea-plugin>
